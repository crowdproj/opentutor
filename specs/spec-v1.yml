openapi: 3.0.4
info:
  title: OpenTutor
  description: 'A simple opensource application that provides flashcards to learn foreign words'
  contact:
    email: ss.szuev@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost/v1
tags:
  - name: card
    description: A learning card (word, translation, examples, etc)
  - name: dictionary
    description: A dictionary - collection of learning cards
  - name: audio
    description: Get audio resource from external system
  - name: settings
    description: Settings api
  - name: translation
    description: Fetch translation from external system

paths:
  /api/sounds/get:
    post:
      tags:
        - audio
      summary: Gets an audio-resource by its id (as a path)
      operationId: getAudionResource
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAudioRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAudioResponse'

  /api/translation/fetch:
    post:
      tags:
        - translation
      summary: Gets a translation object from external system
      operationId: fetchTranslation
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchTranslationRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FetchTranslationResponse'

  /api/dictionaries/get-all:
    post:
      tags:
        - dictionary
      summary: Gets dictionaries
      operationId: getAllDictionaries
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAllDictionariesRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllDictionariesResponse'

  /api/dictionaries/create:
    post:
      tags:
        - dictionary
      summary: Creates dictionary
      operationId: createDictionary
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDictionaryRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateDictionaryResponse'

  /api/dictionaries/update:
    post:
      tags:
        - dictionary
      summary: Updates dictionary
      operationId: updateDictionary
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDictionaryRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateDictionaryResponse'

  /api/dictionaries/delete:
    post:
      tags:
        - dictionary
      summary: Deletes the given dictionary
      operationId: deleteDictionary
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteDictionaryRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteDictionaryResponse'

  /api/dictionaries/download:
    post:
      tags:
        - dictionary
      summary: Downloads the given dictionary
      operationId: downloadDictionary
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadDictionaryRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DownloadDictionaryResponse'

  /api/dictionaries/upload:
    post:
      tags:
        - dictionary
      summary: Uploads the given dictionary
      operationId: uploadDictionary
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadDictionaryRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadDictionaryResponse'

  /api/cards/search:
    post:
      tags:
        - card
      summary: Gets cards by parameters
      operationId: searchCards
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCardsRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCardsResponse'

  /api/cards/get-all:
    post:
      tags:
        - card
      summary: Gets all cards by dictionary id
      operationId: getAllCards
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAllCardsRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllCardsResponse'

  /api/cards/get:
    post:
      tags:
        - card
      summary: Gets a card resource by the ID specified
      operationId: getCard
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCardRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCardResponse'

  /api/cards/create:
    post:
      tags:
        - card
      summary: Creates a new card
      operationId: createCard
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCardRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCardResponse'

  /api/cards/update:
    post:
      tags:
        - card
      summary: Update an existing card
      operationId: updateCard
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCardRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCardResponse'

  /api/cards/learn:
    post:
      tags:
        - card
      summary: Updates all the given cards in the underlying db (during learning process)
      operationId: updateCards
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LearnCardsRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearnCardsResponse'

  /api/cards/delete:
    post:
      tags:
        - card
      summary: Deletes the given card
      operationId: deleteCard
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCardRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCardResponse'

  /api/cards/reset:
    post:
      tags:
        - card
      summary: Resets the status of the given card
      operationId: resetCardStatus
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetCardRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetCardResponse'

  /api/settings/get:
    post:
      tags:
        - settings
      summary: Gets user's settings
      operationId: getSettings
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSettingsRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSettingsResponse'

  /api/settings/update:
    post:
      tags:
        - settings
      summary: Updates user's settings
      operationId: updateSettings
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSettingsRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSettingsResponse'

components:
  schemas:
    GetAudioRequest:
      description: Request to get audio resource (byte array)
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            lang:
              type: string
            word:
              type: string

    FetchTranslationRequest:
      description: Request to fetch translation resource
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            sourceLang:
              type: string
            targetLang:
              type: string
            word:
              type: string

    FetchTranslationResponse:
      description: Fetch translation resource by source lang, target lang and query word
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            card:
              $ref: '#/components/schemas/CardResource'

    GetAudioResponse:
      description: Get audio resource response
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            resource:
              type: string
              format: byte

    GetAllDictionariesRequest:
      description: Request to read dictionaries
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - type: object

    GetAllDictionariesResponse:
      description: List of dictionaries
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            dictionaries:
              type: array
              items:
                $ref: '#/components/schemas/DictionaryResource'

    CreateDictionaryRequest:
      description: Create dictionary request
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            dictionary:
              $ref: '#/components/schemas/DictionaryResource'

    CreateDictionaryResponse:
      description: Create dictionary response
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            dictionary:
              $ref: '#/components/schemas/DictionaryResource'

    UpdateDictionaryRequest:
      description: Update dictionary request
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            dictionary:
              $ref: '#/components/schemas/DictionaryResource'

    UpdateDictionaryResponse:
      description: Update dictionary response
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            dictionary:
              $ref: '#/components/schemas/DictionaryResource'

    DeleteDictionaryRequest:
      description: Delete dictionary request
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            dictionaryId:
              type: string

    DeleteDictionaryResponse:
      description: Delete dictionary response
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object

    DownloadDictionaryRequest:
      description: Download dictionary request
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            type:
              description: 'xml/json'
              type: string
            dictionaryId:
              type: string

    DownloadDictionaryResponse:
      description: Download dictionary response
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            resource:
              type: string
              format: byte

    UploadDictionaryRequest:
      description: Upload dictionary request
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            type:
              description: 'xml/json'
              type: string
            resource:
              type: string
              format: byte

    UploadDictionaryResponse:
      description: Upload dictionary response
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            dictionary:
              $ref: '#/components/schemas/DictionaryResource'

    SearchCardsRequest:
      description: Search cards request
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            random:
              description: '[true] to return randomized list'
              type: boolean
            unknown:
              description: '[true] to return only unknown words, [false] or [undefined] if it does not matter'
              type: boolean
            length:
              description: 'The desired size of result collection (undefined for defaults)'
              type: integer
              format: int32
            dictionaryIds:
              type: array
              items:
                type: string

    SearchCardsResponse:
      description: Search cards response
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          description: List of cards
          properties:
            cards:
              type: array
              items:
                $ref: '#/components/schemas/CardResource'

    GetAllCardsRequest:
      description: Request to get all cards by dictionaryId
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            dictionaryId:
              type: string

    GetAllCardsResponse:
      description: Get all cards by dictionaryId response
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          description: List of cards
          properties:
            cards:
              type: array
              items:
                $ref: '#/components/schemas/CardResource'

    GetCardRequest:
      description: Get card by id request
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            cardId:
              type: string

    GetCardResponse:
      description: Get card by id response
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            card:
              $ref: '#/components/schemas/CardResource'

    CreateCardRequest:
      description: Create card request
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            card:
              $ref: '#/components/schemas/CardResource'

    CreateCardResponse:
      description: Create card response
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            card:
              $ref: '#/components/schemas/CardResource'

    UpdateCardRequest:
      description: Update card request
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            card:
              $ref: '#/components/schemas/CardResource'

    UpdateCardResponse:
      description: Update card response
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            card:
              $ref: '#/components/schemas/CardResource'

    LearnCardsRequest:
      description: Learn card request
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            cards:
              type: array
              items:
                $ref: '#/components/schemas/LearnResource'

    LearnCardsResponse:
      description: Learn card response
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            cards:
              type: array
              items:
                $ref: '#/components/schemas/CardResource'

    DeleteCardRequest:
      description: Delete card request
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            cardId:
              type: string

    DeleteCardResponse:
      description: Delete card response
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          description: Delete card

    ResetCardRequest:
      description: Reset card status request
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            cardId:
              type: string

    ResetCardResponse:
      description: Reset card status response
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            card:
              $ref: '#/components/schemas/CardResource'

    GetSettingsRequest:
      description: Get user's settings
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - type: object

    GetSettingsResponse:
      description: Get user's settings
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            settings:
              $ref: '#/components/schemas/SettingsResource'

    UpdateSettingsRequest:
      description: Update settings request
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - type: object
          properties:
            settings:
              $ref: '#/components/schemas/SettingsResource'

    UpdateSettingsResponse:
      description: Update card response
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object

    BaseRequest:
      type: object
      description: The base request - abstraction that holds request type and request id
      properties:
        requestType:
          type: string
          description: The request type
          example: create
        requestId:
          type: string
          description: The request id
      discriminator:
        propertyName: requestType
        mapping:
          getAudio: '#/components/schemas/GetAudioRequest'
          fetchTranslation: '#/components/schemas/FetchTranslationRequest'
          getAllDictionaries: '#/components/schemas/GetAllDictionariesRequest'
          createDictionary: '#/components/schemas/CreateDictionaryRequest'
          updateDictionary: '#/components/schemas/UpdateDictionaryRequest'
          deleteDictionary: '#/components/schemas/DeleteDictionaryRequest'
          downloadDictionary: '#/components/schemas/DownloadDictionaryRequest'
          uploadDictionary: '#/components/schemas/UploadDictionaryRequest'
          searchCards: '#/components/schemas/SearchCardsRequest'
          getAllCards: '#/components/schemas/GetAllCardsRequest'
          getCard: '#/components/schemas/GetCardRequest'
          createCard: '#/components/schemas/CreateCardRequest'
          updateCard: '#/components/schemas/UpdateCardRequest'
          learnCard: '#/components/schemas/LearnCardsRequest'
          deleteCard: '#/components/schemas/DeleteCardRequest'
          resetCard: '#/components/schemas/ResetCardRequest'
          getSettings: '#/components/schemas/GetSettingsRequest'
          updateSettings: '#/components/schemas/UpdateSettingsRequest'

    BaseResponse:
      type: object
      description: The base response - abstraction that holds response type and request id
      properties:
        responseType:
          type: string
          description: The response type
          example: create
        requestId:
          type: string
          description: The response id
        result:
          $ref: '#/components/schemas/Result'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResource'
      discriminator:
        propertyName: responseType
        mapping:
          getAudio: '#/components/schemas/GetAudioResponse'
          fetchTranslation: '#/components/schemas/FetchTranslationResponse'
          getAllDictionaries: '#/components/schemas/GetAllDictionariesResponse'
          createDictionary: '#/components/schemas/CreateDictionaryResponse'
          updateDictionary: '#/components/schemas/UpdateDictionaryResponse'
          deleteDictionary: '#/components/schemas/DeleteDictionaryResponse'
          downloadDictionary: '#/components/schemas/DownloadDictionaryResponse'
          uploadDictionary: '#/components/schemas/UploadDictionaryResponse'
          searchCards: '#/components/schemas/SearchCardsResponse'
          getAllCards: '#/components/schemas/GetAllCardsResponse'
          getCard: '#/components/schemas/GetCardResponse'
          createCard: '#/components/schemas/CreateCardResponse'
          updateCard: '#/components/schemas/UpdateCardResponse'
          learnCard: '#/components/schemas/LearnCardsResponse'
          deleteCard: '#/components/schemas/DeleteCardResponse'
          resetCard: '#/components/schemas/ResetCardResponse'
          getSettings: '#/components/schemas/GetSettingsResponse'
          updateSettings: '#/components/schemas/UpdateSettingsResponse'

    DictionaryResource:
      description: 'A dictionary resource'
      type: object
      properties:
        dictionaryId:
          type: string
        name:
          type: string
        sourceLang:
          type: string
        targetLang:
          type: string
        partsOfSpeech:
          type: array
          items:
            type: string
        total:
          type: integer
          format: int32
        learned:
          type: integer
          format: int32
        numberOfRightAnswers:
          type: integer
          format: int32

    CardResource:
      description: 'A card resource'
      type: object
      properties:
        cardId:
          type: string
        dictionaryId:
          type: string
        words:
          type: array
          items:
            $ref: '#/components/schemas/CardWordResource'
        stats:
          type: object
          additionalProperties:
            type: integer
            format: int64
        details:
          type: object
          additionalProperties:
            type: object
        answered:
          type: integer
          format: int32
        changedAt:
          type: string
          format: date-time

    CardWordResource:
      description: 'A card word resource, information about particular word'
      type: object
      properties:
        word:
          type: string
        transcription:
          type: string
        partOfSpeech:
          type: string
        translations:
          type: array
          items:
            type: array
            items:
              type: string
        examples:
          type: array
          items:
            $ref: '#/components/schemas/CardWordExampleResource'
        sound:
          type: string
        primary:
          type: boolean

    CardWordExampleResource:
      description: 'A card word example resource,  part of CardWordResource'
      type: object
      properties:
        example:
          type: string
        translation:
          type: string

    LearnResource:
      description: 'A card resource to update card stage details'
      type: object
      properties:
        cardId:
          type: string
        details:
          type: object
          additionalProperties:
            type: integer
            format: int64

    SettingsResource:
      description: 'User`s settings resource'
      type: object
      properties:
        stageShowNumberOfWords:
          type: integer
          format: int32
        stageOptionsNumberOfVariants:
          type: integer
          format: int32
        numberOfWordsPerStage:
          type: integer
          format: int32
        stageMosaicSourceLangToTargetLang:
          type: boolean
        stageOptionsSourceLangToTargetLang:
          type: boolean
        stageWritingSourceLangToTargetLang:
          type: boolean
        stageSelfTestSourceLangToTargetLang:
          type: boolean
        stageMosaicTargetLangToSourceLang:
          type: boolean
        stageOptionsTargetLangToSourceLang:
          type: boolean
        stageWritingTargetLangToSourceLang:
          type: boolean
        stageSelfTestTargetLangToSourceLang:
          type: boolean

    ErrorResource:
      type: object
      description: Basic error object
      properties:
        code:
          type: string
        group:
          type: string
        field:
          type: string
        message:
          type: string

    Result:
      description: Type of result
      type: string
      enum:
        - success
        - error