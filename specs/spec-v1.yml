openapi: 3.0.4
info:
  title: OpenTutor
  description: 'A simple opensource application that provides flashcards to learn foreign words'
  contact:
    email: ss.szuev@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: http://localhost/v1
tags:
  - name: card
    description: A learning card (word, translation, examples, etc)
  - name: dictionary
    description: A dictionary - collection of learning cards
  - name: audio
    description: Audio resource, wav

paths:
  /api/sounds/get:
    post:
      tags:
        - audio
      summary: Gets an audio-resource by its id (as a path)
      operationId: getAudionResource
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAudioRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAudioResponse'

  /api/dictionaries/get-all:
    post:
      tags:
        - dictionary
      summary: Gets dictionaries
      operationId: getAllDictionaries
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAllDictionariesRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllDictionariesResponse'

  /api/cards/search:
    post:
      tags:
        - card
      summary: Gets cards by parameters
      operationId: searchCards
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchCardsRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchCardsResponse'

  /api/cards/get-all:
    post:
      tags:
        - card
      summary: Gets all cards by dictionary id
      operationId: getAllCards
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAllCardsRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAllCardsResponse'

  /api/cards/get:
    post:
      tags:
        - card
      summary: Gets a card resource by the ID specified
      operationId: getCard
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCardRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCardResponse'

  /api/cards/create:
    post:
      tags:
        - card
      summary: Creates a new card
      operationId: createCard
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCardRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCardResponse'

  /api/cards/update:
    post:
      tags:
        - card
      summary: Update an existing card
      operationId: updateCard
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCardRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCardResponse'

  /api/cards/learn:
    post:
      tags:
        - card
      summary: Updates all the given cards in the underlying db (during learning process)
      operationId: updateCards
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LearnCardsRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LearnCardsResponse'

  /api/cards/delete:
    post:
      tags:
        - card
      summary: Deletes the given card
      operationId: deleteCard
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/DeleteCardRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCardResponse'

  /api/cards/reset:
    post:
      tags:
        - card
      summary: Resets the status of the given card
      operationId: resetCardStatus
      requestBody:
        description: request body
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/ResetCardRequest'
        required: true
      responses:
        200:
          description: response body
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResetCardResponse'

components:
  schemas:
    GetAudioRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - $ref: '#/components/schemas/DebugRequest'
        - type: object
          properties:
            lang:
              type: string
            word:
              type: string

    GetAudioResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            resource:
              type: string
              format: byte

    GetAllDictionariesRequest:
      description: 'Request to read dictionaries by userId'
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - $ref: '#/components/schemas/DebugRequest'
        - type: object
          properties:
            userId:
              type: string

    GetAllDictionariesResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          description: List of dictionaries
          properties:
            dictionaries:
              type: array
              items:
                $ref: '#/components/schemas/DictionaryResource'

    SearchCardsRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - $ref: '#/components/schemas/DebugRequest'
        - type: object
          properties:
            random:
              description: '[true] to return randomized list'
              type: boolean
            unknown:
              description: '[true] to return only unknown words, [false] or [undefined] if it does not matter'
              type: boolean
            length:
              description: 'The desired size of result collection (undefined for defaults)'
              type: integer
              format: int32
            dictionaryIds:
              type: array
              items:
                type: string

    SearchCardsResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          description: List of cards
          properties:
            cards:
              type: array
              items:
                $ref: '#/components/schemas/CardResource'

    GetAllCardsRequest:
      description: 'Request to getl all cards by dictionaryId'
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - $ref: '#/components/schemas/DebugRequest'
        - type: object
          properties:
            dictionaryId:
              type: string

    GetAllCardsResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          description: List of cards
          properties:
            cards:
              type: array
              items:
                $ref: '#/components/schemas/CardResource'

    GetCardRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - $ref: '#/components/schemas/DebugRequest'
        - type: object
          properties:
            cardId:
              type: string

    GetCardResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            card:
              $ref: '#/components/schemas/CardResource'

    CreateCardRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - $ref: '#/components/schemas/DebugRequest'
        - type: object
          properties:
            card:
              $ref: '#/components/schemas/CardResource'

    CreateCardResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            card:
              $ref: '#/components/schemas/CardResource'

    UpdateCardRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - $ref: '#/components/schemas/DebugRequest'
        - type: object
          properties:
            card:
              $ref: '#/components/schemas/CardResource'

    UpdateCardResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            card:
              $ref: '#/components/schemas/CardResource'

    LearnCardsRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - $ref: '#/components/schemas/DebugRequest'
        - type: object
          properties:
            cards:
              type: array
              items:
                $ref: '#/components/schemas/LearnResource'

    LearnCardsResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            cards:
              type: array
              items:
                $ref: '#/components/schemas/CardResource'

    DeleteCardRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - $ref: '#/components/schemas/DebugRequest'
        - type: object
          properties:
            cardId:
              type: string

    DeleteCardResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'

    ResetCardRequest:
      allOf:
        - $ref: '#/components/schemas/BaseRequest'
        - $ref: '#/components/schemas/DebugRequest'
        - type: object
          properties:
            cardId:
              type: string

    ResetCardResponse:
      allOf:
        - $ref: '#/components/schemas/BaseResponse'
        - type: object
          properties:
            card:
              $ref: '#/components/schemas/CardResource'

    BaseRequest:
      type: object
      description: The base request - abstraction that holds request type and request id
      properties:
        requestType:
          type: string
          description: The request type
          example: create
        requestId:
          type: string
          description: The request id
      discriminator:
        propertyName: requestType
        mapping:
          getAudio: '#/components/schemas/GetAudioRequest'
          getAllDictionaries: '#/components/schemas/GetAllDictionariesRequest'
          searchCards: '#/components/schemas/SearchCardsRequest'
          getAllCards: '#/components/schemas/GetAllCardsRequest'
          getCard: '#/components/schemas/GetCardRequest'
          createCard: '#/components/schemas/CreateCardRequest'
          updateCard: '#/components/schemas/UpdateCardRequest'
          learnCard: '#/components/schemas/LearnCardsRequest'
          deleteCard: '#/components/schemas/DeleteCardRequest'
          resetCard: '#/components/schemas/ResetCardRequest'

    DebugRequest:
      type: object
      properties:
        debug:
          $ref: '#/components/schemas/DebugResource'

    BaseResponse:
      type: object
      description: The base response - abstraction that holds response type and request id
      properties:
        responseType:
          type: string
          description: The response type
          example: create
        requestId:
          type: string
          description: The response id
        result:
          $ref: '#/components/schemas/Result'
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorResource'
      discriminator:
        propertyName: responseType
        mapping:
          getAudio: '#/components/schemas/GetAudioResponse'
          getAllDictionaries: '#/components/schemas/GetAllDictionariesResponse'
          searchCards: '#/components/schemas/SearchCardsResponse'
          getAllCards: '#/components/schemas/GetAllCardsResponse'
          getCard: '#/components/schemas/GetCardResponse'
          createCard: '#/components/schemas/CreateCardResponse'
          updateCard: '#/components/schemas/UpdateCardResponse'
          learnCard: '#/components/schemas/LearnCardsResponse'
          deleteCard: '#/components/schemas/DeleteCardResponse'
          resetCard: '#/components/schemas/ResetCardResponse'

    DictionaryResource:
      description: 'A dictionary resource'
      type: object
      properties:
        dictionaryId:
          type: string
        name:
          type: string
        sourceLang:
          type: string
        targetLang:
          type: string
        partOfSpeech:
          type: array
          items:
            type: string
        total:
          type: integer
          format: int64
        learned:
          type: integer
          format: int64

    CardResource:
      description: 'A card resource'
      type: object
      properties:
        cardId:
          type: string
        dictionaryId:
          type: string
        word:
          type: string
        transcription:
          type: string
        partOfSpeech:
          type: string
        translations:
          type: array
          items:
            type: array
            items:
              type: string
        examples:
          type: array
          items:
            type: string
        sound:
          type: string
        answered:
          type: integer
          format: int32
        details:
          type: object
          additionalProperties:
            type: integer
            format: int64

    LearnResource:
      description: 'A card resource to update card stage details'
      type: object
      properties:
        cardId:
          type: string
        details:
          type: object
          additionalProperties:
            type: integer
            format: int64

    ErrorResource:
      type: object
      description: Basic error object
      properties:
        code:
          type: string
        group:
          type: string
        field:
          type: string
        message:
          type: string

    DebugResource:
      type: object
      properties:
        mode:
          $ref: '#/components/schemas/RunMode'
        stub:
          $ref: '#/components/schemas/DebugStub'

    Result:
      description: Type of result
      type: string
      enum:
        - success
        - error

    DebugStub:
      type: string
      description: Stubs
      enum:
        - success
        - error_unexpected_field
        - error_wrong_dictionary_id
        - error_wrong_card_id
        - error_card_wrong_word
        - error_card_wrong_transcription
        - error_card_wrong_translation
        - error_card_wrong_examples
        - error_card_wrong_part_of_speech
        - error_card_wrong_details
        - error_card_wrong_audio_resource
        - error_audio_resource_wrong_resource_id
        - error_audio_resource_server_error
        - error_audio_resource_not_found
        - error_cards_wrong_filter_length
        - error_learn_card_wrong_card_id
        - error_learn_card_wrong_stages
        - error_learn_card_wrong_details
        - error_unknown

    RunMode:
      type: string
      enum:
        - prod
        - test
        - stub
