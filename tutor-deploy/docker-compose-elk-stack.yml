version: "3.9"

services:
  elasticsearch:
    build:
      context: .
      dockerfile: elasticsearch.Dockerfile
    volumes:
      - "${DATA_DIR}/elasticsearch:/usr/share/elasticsearch/data"
    ports:
      - "9200:9200"
      - "9300:9300"

  kibana:
    build:
      context: .
      dockerfile: kibana.Dockerfile
    ports:
      - "5601:5601"
    links:
      - elasticsearch

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    expose:
      - "2181"

  kafka:
    image: wurstmeister/kafka:2.13-2.8.1
    depends_on:
      - zookeeper
    ports:
      - "9094:9094"
    volumes:
      - "${DATA_DIR}/kafka:/kafka"
    links:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE

  logstash:
    build:
      context: .
      dockerfile: logstash.Dockerfile
    ports:
      - "5044:5044"
      - "1111:1111"
    depends_on:
      - kafka
      - elasticsearch
    environment:
      BOOTSTRAP_SERVERS: "kafka:9092"
    links:
      - elasticsearch

  kafdrop:
    image: obsidiandynamics/kafdrop:3.30.0
    ports:
      - "9000:9000"
    depends_on:
      - kafka
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    links:
      - elasticsearch
